// src/PaymentForm.js
import React, { useState, useEffect } from 'react';
import { loadStripe } from '@stripe/stripe-js';
import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';
import axios from 'axios';

// Get the publishable key from the backend
const stripePromise = loadStripe('your_publishable_key_here');

const PaymentForm = () => {
  const [amount, setAmount] = useState('');
  const [email, setEmail] = useState('');
  const [paymentStatus, setPaymentStatus] = useState('');
  const stripe = useStripe();
  const elements = useElements();

  const handlePayment = async (event) => {
    event.preventDefault();
    
    if (!stripe || !elements) return; // Make sure Stripe.js has loaded

    const cardElement = elements.getElement(CardElement);
    
    // Create a PaymentMethod with the card details
    const { error, paymentMethod } = await stripe.createPaymentMethod({
      type: 'card',
      card: cardElement,
    });

    if (error) {
      console.error(error);
      alert(error.message);
      return;
    }

    // Send the paymentMethodId and amount to the backend to process the payment
    try {
      const response = await axios.post('http://localhost:3001/pay', {
        amount: amount,
        paymentMethodId: paymentMethod.id,
        email: email,
      });

      if (response.data.success) {
        setPaymentStatus('Payment Successful');
      } else {
        setPaymentStatus('Payment Failed');
      }
    } catch (err) {
      console.error('Error:', err);
      setPaymentStatus('Payment Failed');
    }
  };

  return (
    <div>
      <h2>Stripe Payment</h2>
      <form onSubmit={handlePayment}>
        <div>
          <label>Amount (USD):</label>
          <input
            type="number"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            required
          />
        </div>
        <div>
          <label>Email:</label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div>
          <CardElement />
        </div>
        <button type="submit" disabled={!stripe}>
          Pay
        </button>
      </form>
      {paymentStatus && <p>{paymentStatus}</p>}
    </div>
  );
};

const StripeContainer = () => {
  return (
    <Elements stripe={stripePromise}>
      <PaymentForm />
    </Elements>
  );
};

export default StripeContainer;
